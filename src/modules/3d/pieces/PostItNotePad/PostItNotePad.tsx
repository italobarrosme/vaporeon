/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { Group } from 'three'

interface ModelProps {
  [key: string]: any
  onClick?: (mesh: Group) => void
  position?: [number, number, number]
  scale?: number
}

interface NodeProps {
  [key: string]: any
}

export function PostItNotePad({
  onClick,
  position,
  scale = 0.5,
  ...props
}: ModelProps) {
  const { nodes, materials } = useGLTF(
    '/notpadPostIt/notpadPostItBaseBasicPbr.glb'
  ) as NodeProps

  const notePadRef = useRef<Group>(null)

  if (!nodes || !materials) return null

  return (
    <group
      {...props}
      ref={notePadRef}
      dispose={null}
      onClick={() => {
        if (onClick && notePadRef.current) {
          onClick(notePadRef.current)
        }
      }}
      scale={scale}
      position={position}
    >
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.model?.geometry}
        material={materials.model}
      />
    </group>
  )
}

useGLTF.preload('/notpadPostIt/notpadPostItBaseBasicPbr.glb')
